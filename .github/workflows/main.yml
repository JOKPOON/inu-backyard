name: Build and Publish

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          tags: ghcr.io/jokpoon/inu-backyard:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push-docker-image
    name: Deploy to Alibaba Cloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ECS_PRIVATE_KEY }}

      - name: Upload Docker Compose files to EC2
        run: |
          HOST=${{ secrets.ECS_HOST }}
          USER=${{ secrets.ECS_USER }}
          PORT=22
          ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            mkdir -p /$USER/inu
          EOF
          scp -o StrictHostKeyChecking=no -P $PORT docker-compose.yml $USER@$HOST:/$USER/inu/docker-compose.yml
      - name: Deploy Frontend to EC2
        run: |
          HOST=${{ secrets.ECS_HOST }}
          USER=${{ secrets.ECS_USER }}
          PORT=22
          ssh -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            sudo docker pull ghcr.io/jokpoon/inu-backyard:latest
            sudo docker compose -f /$USER/inu/docker-compose.yml up -d
          EOF
